{"version":3,"sources":["components/Header.jsx","assets/wildfire_icon.png","components/WildfireMarker.jsx","assets/volcanic_eruption_icon.png","components/VolcanicEruptionMarker.jsx","assets/glacier_icon.png","components/GlacierMelt.jsx","assets/severe_storm_icon.png","components/SevereStorm.jsx","components/LocationInfoBox.jsx","components/Map.jsx","components/WildfireMap.jsx","components/SevereStormMap.jsx","components/VolcanoesMap.jsx","components/IceMeltMap.jsx","components/TrackerPage.jsx","assets/Glacier_img.png","assets/Storm_img.png","assets/Volcanoes_img.png","assets/Wildfire_img.png","assets/arrow.png","components/Home.jsx","App.js","reportWebVitals.js","index.js"],"names":["Header","className","WildfireMarker","lat","lng","onClick","src","WildFireIcon","alt","VolcanicEruptionMarker","VolcanicEruptionIcon","GlacierMelt","GlacierIcon","SevereStorm","SevereStormIcon","LocationInfoBox","info","title","x","y","Map","eventData","center","zoom","useState","locationInfo","setLocationInfo","wildfireMapMarkers","map","wfev","categories","id","geometry","coordinates","volcanicEruptionMapMarkers","veev","type","glacierMeltMapMarkers","gmev","severeStormMapMarkers","stev","bootstrapURLKeys","key","defaultCenter","defaultZoom","defaultProps","WildfireMap","SevereStormMap","VolcanoesMap","IceMeltMap","TrackerPage","setEventData","active","setActive","useEffect","a","fetch","res","json","events","fetchWildfireEvent","motion","div","initial","animate","transition","duration","allData","opacity","exit","Home","img","WildfireImg","whileHover","scale","zIndex","VolcanoImg","GlacierImg","SevereStormImg","button","to","Arrow","App","AnimatePresence","exitBeforeEnter","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9d467506.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Header = () => {\r\n    return (\r\n        <div className=\"page-header\">\r\n            <h1>Tiyempu</h1>            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","export default __webpack_public_path__ + \"static/media/wildfire_icon.fe949f65.png\";","import React from 'react'\r\nimport WildFireIcon from '../assets/wildfire_icon.png';\r\n\r\nconst WildfireMarker = ({lat , lng , onClick}) => {\r\n    return (\r\n        <div className=\"wildfire-marker\" onClick={onClick}>\r\n            <img src={WildFireIcon} alt=\"Wildfire\" className=\"wildfire-icon\"/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WildfireMarker\r\n","export default __webpack_public_path__ + \"static/media/volcanic_eruption_icon.eb454834.png\";","import React from 'react'\r\nimport VolcanicEruptionIcon from '../assets/volcanic_eruption_icon.png';\r\n\r\nconst VolcanicEruptionMarker = ({lat , lng , onClick}) => {\r\n    return (\r\n        <div className=\"volcanic-eruption-marker\" onClick={onClick}>\r\n             <img src={VolcanicEruptionIcon} alt=\"Volcanic Eruption\" className=\"volcanic-eruption-icon\"/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default VolcanicEruptionMarker\r\n","export default __webpack_public_path__ + \"static/media/glacier_icon.2214e3fc.png\";","import React from 'react'\r\nimport GlacierIcon from '../assets/glacier_icon.png';\r\nconst GlacierMelt = ({lat , lng , onClick}) => {\r\n    return (\r\n        \r\n        <div className=\"glacier-marker\" onClick={onClick}>\r\n            <img src={GlacierIcon} alt=\"Glacier\" className=\"glacier-icon\"/>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default GlacierMelt\r\n","export default __webpack_public_path__ + \"static/media/severe_storm_icon.b47b48c2.png\";","import React from 'react'\r\nimport SevereStormIcon from '../assets/severe_storm_icon.png';\r\nfunction SevereStorm({lat,lng,onClick}) {\r\n    return (\r\n        <div className=\"severe-storm-marker\" onClick={onClick}>\r\n            <img src={SevereStormIcon} alt=\" Severe Storm\" className=\"severe-storm-icon\"/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SevereStorm\r\n","import React from 'react'\r\n\r\nconst LocationInfoBox = ({info}) => {\r\n    return (\r\n        <div className=\"location-info\">\r\n            <h2>Event: {info.title}</h2>\r\n            <p>Coordinates: X: {info.x} Y: {info.y}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LocationInfoBox\r\n","import {useState} from 'react';\r\nimport GoogleMapReact from 'google-map-react';\r\nimport WildfireMarker from './WildfireMarker';\r\nimport VolcanicEruptionMarker from './VolcanicEruptionMarker';\r\nimport GlacierMeltMarker from './GlacierMelt';\r\nimport SevereStormMarker from './SevereStorm';\r\nimport LocationInfoBox from './LocationInfoBox';\r\n\r\nconst Map = ({eventData,center,zoom}) => {\r\n    const [locationInfo, setLocationInfo] = useState(\"null\");\r\n\r\n    /// wfev = wildfire event\r\n    const wildfireMapMarkers=eventData.map(wfev => {\r\n        if(wfev.categories[0].id === \"wildfires\"){\r\n            return <WildfireMarker lat={wfev.geometry[0].coordinates[1]} lng={wfev.geometry[0].coordinates[0]} \r\n            onClick={() =>setLocationInfo({title:wfev.title, x:wfev.geometry[0].coordinates[1], y:wfev.geometry[0].coordinates[0]})}\r\n            />;\r\n        }\r\n    }) ;\r\n\r\n    /// veev = volcanic eruption event\r\n    const volcanicEruptionMapMarkers = eventData.map(veev =>{\r\n        if(veev.categories[0].id === \"volcanoes\"){\r\n\r\n            if(veev.geometry[0].type === \"Polygon\"){\r\n                \r\n                return <VolcanicEruptionMarker lat={veev.geometry[0].coordinates[0][0][1]} lng={veev.geometry[0].coordinates[0][0][0]} \r\n                onClick={() =>setLocationInfo({title:veev.title, x:veev.geometry[0].coordinates[0][0][1], y:veev.geometry[0].coordinates[0][0][0]})}\r\n                />;\r\n            }\r\n            else\r\n            {\r\n\r\n                return <VolcanicEruptionMarker lat={veev.geometry[0].coordinates[1]} lng={veev.geometry[0].coordinates[0]}\r\n                onClick={() =>setLocationInfo({title:veev.title, x:veev.geometry[0].coordinates[1], y:veev.geometry[0].coordinates[0]})}\r\n\r\n                />;\r\n            }\r\n           \r\n        }\r\n    });\r\n\r\n    /// gmev = glacier melt event\r\n    const glacierMeltMapMarkers = eventData.map(gmev =>{\r\n        if(gmev.categories[0].id === \"seaLakeIce\"){\r\n            return <GlacierMeltMarker lat={gmev.geometry[0].coordinates[1]} lng={gmev.geometry[0].coordinates[0]}\r\n            onClick={() =>setLocationInfo({title:gmev.title, x:gmev.geometry[0].coordinates[1], y:gmev.geometry[0].coordinates[0]})}\r\n\r\n            />;\r\n        }\r\n    });\r\n\r\n    /// stev = severe storm event\r\n    const severeStormMapMarkers = eventData.map(stev =>{\r\n        if(stev.categories[0].id === \"severeStorms\"){\r\n            return <SevereStormMarker lat={stev.geometry[0].coordinates[1]} lng={stev.geometry[0].coordinates[0]}\r\n            onClick={() =>setLocationInfo({title:stev.title, x:stev.geometry[0].coordinates[1], y:stev.geometry[0].coordinates[0]})}\r\n\r\n            />;\r\n        }\r\n    });\r\n\r\n    return (\r\n        <div className=\"map\">\r\n            <GoogleMapReact\r\n                bootstrapURLKeys={{ key:'AIzaSyDd7fzWZR27JlHK5lABLdkpNwxklYE-lHw'}}\r\n                defaultCenter={center}\r\n                defaultZoom ={zoom}\r\n            >\r\n                {wildfireMapMarkers}\r\n                {volcanicEruptionMapMarkers}\r\n                {glacierMeltMapMarkers}\r\n                {severeStormMapMarkers}\r\n            </GoogleMapReact>\r\n            {locationInfo && <LocationInfoBox info={locationInfo}/>}\r\n        </div>\r\n    )\r\n}\r\nMap.defaultProps = {\r\n    center: {lat:25.2048 , lng: 55.2708},\r\n    zoom: 8\r\n}\r\nexport default Map\r\n","import {useState} from 'react'\r\nimport GoogleMapReact from 'google-map-react';\r\nimport WildfireMarker from './WildfireMarker';\r\nimport LocationInfoBox from './LocationInfoBox';\r\n\r\nconst WildfireMap = ({eventData,center,zoom}) => {\r\n    const [locationInfo, setLocationInfo] = useState(\"null\");\r\n    /// wfev = wildfire event\r\n    const wildfireMapMarkers=eventData.map(wfev => {\r\n        \r\n\r\n        if(wfev.categories[0].id === \"wildfires\"){\r\n            return <WildfireMarker lat={wfev.geometry[0].coordinates[1]} lng={wfev.geometry[0].coordinates[0]} \r\n            onClick={() =>setLocationInfo({title:wfev.title, x:wfev.geometry[0].coordinates[1], y:wfev.geometry[0].coordinates[0]})}\r\n\r\n            />;\r\n        }\r\n    }) ;\r\n\r\n    return (\r\n        <div className=\"map\">\r\n            <GoogleMapReact\r\n                bootstrapURLKeys={{ key:'AIzaSyDd7fzWZR27JlHK5lABLdkpNwxklYE-lHw'}}\r\n                defaultCenter={center}\r\n                defaultZoom ={zoom}\r\n            >\r\n                {wildfireMapMarkers}\r\n                \r\n            </GoogleMapReact>\r\n            {locationInfo && <LocationInfoBox info={locationInfo}/>}\r\n        </div>\r\n    )\r\n}\r\nWildfireMap.defaultProps = {\r\n    center: {lat:25.2048 , lng: 55.2708},\r\n    zoom: 8\r\n}\r\nexport default WildfireMap\r\n","import {useState} from 'react'\r\nimport GoogleMapReact from 'google-map-react';\r\nimport SevereStormMarker from './SevereStorm';\r\nimport LocationInfoBox from './LocationInfoBox';\r\n\r\nconst SevereStormMap = ({eventData,center,zoom}) => {\r\n    const [locationInfo, setLocationInfo] = useState(\"null\");\r\n     /// stev = severe storm event\r\n     const severeStormMapMarkers = eventData.map(stev =>{\r\n        if(stev.categories[0].id === \"severeStorms\"){\r\n            return <SevereStormMarker lat={stev.geometry[0].coordinates[1]} lng={stev.geometry[0].coordinates[0]}\r\n            onClick={() =>setLocationInfo({title:stev.title, x:stev.geometry[0].coordinates[1], y:stev.geometry[0].coordinates[0]})}\r\n\r\n            />;\r\n        }\r\n    });\r\n\r\n    return (\r\n        <div className=\"map\">\r\n            <GoogleMapReact\r\n                bootstrapURLKeys={{ key:'AIzaSyDd7fzWZR27JlHK5lABLdkpNwxklYE-lHw'}}\r\n                defaultCenter={center}\r\n                defaultZoom ={zoom}\r\n            >\r\n                {severeStormMapMarkers}\r\n            </GoogleMapReact>\r\n            {locationInfo && <LocationInfoBox info={locationInfo}/>}\r\n        </div>\r\n    )\r\n}\r\n\r\nSevereStormMap.defaultProps = {\r\n    center: {lat:25.2048 , lng: 55.2708},\r\n    zoom: 8\r\n}\r\nexport default SevereStormMap\r\n","import {useState} from 'react'\r\nimport GoogleMapReact from 'google-map-react';\r\nimport VolcanicEruptionMarker from './VolcanicEruptionMarker';\r\nimport LocationInfoBox from './LocationInfoBox';\r\n\r\nconst VolcanoesMap = ({eventData,center,zoom}) => {\r\n    const [locationInfo, setLocationInfo] = useState(\"null\");\r\n\r\n    /// veev = volcanic eruption event\r\n    const volcanicEruptionMapMarkers = eventData.map(veev =>{\r\n        if(veev.categories[0].id === \"volcanoes\"){\r\n\r\n            if(veev.geometry[0].type === \"Polygon\"){\r\n                \r\n                return <VolcanicEruptionMarker lat={veev.geometry[0].coordinates[0][0][1]} lng={veev.geometry[0].coordinates[0][0][0]} \r\n                onClick={() =>setLocationInfo({title:veev.title, x:veev.geometry[0].coordinates[0][0][1], y:veev.geometry[0].coordinates[0][0][0]})}\r\n\r\n                />;\r\n            }\r\n            else\r\n            {\r\n\r\n                return <VolcanicEruptionMarker lat={veev.geometry[0].coordinates[1]} lng={veev.geometry[0].coordinates[0]}\r\n                onClick={() =>setLocationInfo({title:veev.title, x:veev.geometry[0].coordinates[1], y:veev.geometry[0].coordinates[0]})}\r\n\r\n                />;\r\n            }\r\n           \r\n        }\r\n    });\r\n\r\n    return (\r\n        <div className=\"map\">\r\n            <GoogleMapReact\r\n                bootstrapURLKeys={{ key:'AIzaSyDd7fzWZR27JlHK5lABLdkpNwxklYE-lHw'}}\r\n                defaultCenter={center}\r\n                defaultZoom ={zoom}\r\n            >\r\n                \r\n                {volcanicEruptionMapMarkers}\r\n                \r\n            </GoogleMapReact>\r\n            {locationInfo && <LocationInfoBox info={locationInfo}/>}\r\n        </div>\r\n    )\r\n}\r\n\r\nVolcanoesMap.defaultProps = {\r\n    center: {lat:25.2048 , lng: 55.2708},\r\n    zoom: 8\r\n}\r\n\r\nexport default VolcanoesMap\r\n","import {useState} from 'react'\r\nimport GoogleMapReact from 'google-map-react';\r\nimport GlacierMeltMarker from './GlacierMelt';\r\nimport LocationInfoBox from './LocationInfoBox';\r\n\r\nconst IceMeltMap = ({eventData,center,zoom}) => {\r\n    const [locationInfo, setLocationInfo] = useState(\"null\");\r\n\r\n    /// gmev = glacier melt event\r\n    const glacierMeltMapMarkers = eventData.map(gmev =>{\r\n        if(gmev.categories[0].id === \"seaLakeIce\"){\r\n            return <GlacierMeltMarker lat={gmev.geometry[0].coordinates[1]} lng={gmev.geometry[0].coordinates[0]}\r\n            onClick={() =>setLocationInfo({title:gmev.title, x:gmev.geometry[0].coordinates[1], y:gmev.geometry[0].coordinates[0]})}\r\n\r\n            />;\r\n        }\r\n    });\r\n\r\n    return (\r\n        <div className=\"map\">\r\n            <GoogleMapReact\r\n                bootstrapURLKeys={{ key:'AIzaSyDd7fzWZR27JlHK5lABLdkpNwxklYE-lHw'}}\r\n                defaultCenter={center}\r\n                defaultZoom ={zoom}\r\n            >\r\n             \r\n                {glacierMeltMapMarkers}\r\n               \r\n            </GoogleMapReact>\r\n            {locationInfo && <LocationInfoBox info={locationInfo}/>}\r\n        </div>\r\n    )\r\n}\r\n\r\nIceMeltMap.defaultProps = {\r\n    center: {lat:25.2048 , lng: 55.2708},\r\n    zoom: 8\r\n}\r\nexport default IceMeltMap\r\n","import { useState , useEffect } from 'react'\r\nimport Map from '../components/Map';\r\nimport {motion} from 'framer-motion';\r\nimport WildfireMap from './WildfireMap';\r\nimport StormMap from './SevereStormMap';\r\nimport VolcanoesMap from './VolcanoesMap';\r\nimport IceMeltMap from './IceMeltMap';\r\n\r\n\r\nconst TrackerPage = () => {\r\n    const [eventData, setEventData] = useState([]);\r\n    const [active,setActive] = useState(\"show_all\");\r\n\r\n  useEffect(() => {\r\n    const fetchWildfireEvent= async () => {\r\n     \r\n      const res = await fetch('https://eonet.gsfc.nasa.gov/api/v3/events');\r\n      const {events} = await res.json();\r\n\r\n      setEventData(events);\r\n      \r\n    }\r\n    fetchWildfireEvent();\r\n  }, [])\r\n \r\n    return (\r\n        <div className=\"tracker-page\">\r\n\r\n            <div className=\"tracker-activate-buttons\">\r\n                <button onClick={() => setActive(\"show_all\")}>All</button>\r\n                <button onClick={() => setActive(\"show_wildfire\")} className=\"wildfire-btn\">Wildfires</button>\r\n                <button onClick={() => setActive(\"show_storm\")} className=\"storm-btn\">Storms</button>\r\n                <button onClick={() => setActive(\"show_volcano\")} className=\"volcano-btn\">Volcanoes</button>\r\n                <button onClick={() => setActive(\"show_icemelt\")} className=\"icemelt-btn\">Ice Melt</button>\r\n            </div>\r\n\r\n            <motion.div className=\"tracker-details\"\r\n            initial={{y:1000}}\r\n            animate={{y:0}}\r\n            transition={{duration:2}}\r\n            >\r\n              {/* if the ALL button is pressed, the code below will execute*/}\r\n              {active===\"show_all\" &&\r\n                eventData.map(allData =>{\r\n                  if (allData.categories[0].id === \"volcanoes\") {\r\n                    if(allData.geometry[0].type === \"Polygon\"){\r\n                        return (\r\n                          <motion.div className=\"tracker-details-content\"\r\n                          initial={{opacity:0}}\r\n                          animate={{opacity:1}}\r\n                          exit={{opacity:0}}\r\n                          transition={{duration:1.5}}\r\n                          \r\n                          \r\n                          >\r\n                            \r\n                            <h2>Event: {allData.title}</h2>\r\n                            <p>Coordinates : X: <strong>{allData.geometry[0].coordinates[0][0][1]}</strong> Y: <strong>{allData.geometry[0].coordinates[0][0][0]}</strong> </p>\r\n                          </motion.div>\r\n                        );\r\n                    }\r\n                  }\r\n                  return(\r\n                    <motion.div className=\"tracker-details-content\"\r\n                    initial={{opacity:0}}\r\n                    animate={{opacity:1}}\r\n                    exit={{opacity:0}}\r\n                    transition={{duration:1.5}}\r\n                    \r\n                    \r\n                    >\r\n                      \r\n                      <h2>Event: {allData.title}</h2>\r\n                      <p>Coordinates : X: <strong>{allData.geometry[0].coordinates[1]}</strong> Y: <strong>{allData.geometry[0].coordinates[0]}</strong> </p>\r\n                    </motion.div>\r\n                  )\r\n                })\r\n              }\r\n\r\n              {/* if the Wildfire button is pressed, the code below will execute*/}\r\n              {active===\"show_wildfire\" &&\r\n                eventData.map(allData =>{\r\n                    \r\n                  if(allData.categories[0].id === \"wildfires\"){\r\n                    return(\r\n                      <motion.div className=\"tracker-details-content\"\r\n                      initial={{opacity:0}}\r\n                      animate={{opacity:1}}\r\n                      exit={{opacity:0}}\r\n                      transition={{duration:1.5}}\r\n                    \r\n                      >\r\n                        <h2>Event: {allData.title}</h2>\r\n                        <p>Coordinates : X: <strong>{allData.geometry[0].coordinates[1]}</strong> Y: <strong>{allData.geometry[0].coordinates[0]}</strong> </p>\r\n                      </motion.div>\r\n                    )\r\n                  }\r\n                  \r\n                })\r\n              }\r\n\r\n               {/* if the Storm button is pressed, the code below will execute*/}\r\n               {active===\"show_storm\" &&\r\n                eventData.map(allData =>{\r\n                    \r\n                  if(allData.categories[0].id === \"severeStorms\"){\r\n                    return(\r\n                      <motion.div className=\"tracker-details-content\"\r\n                      initial={{opacity:0}}\r\n                      animate={{opacity:1}}\r\n                      exit={{opacity:0}}\r\n                      transition={{duration:1.5}}\r\n                    \r\n                      >\r\n                        <h2>Event: {allData.title}</h2>\r\n                        <p>Coordinates : X: <strong>{allData.geometry[0].coordinates[1]}</strong> Y: <strong>{allData.geometry[0].coordinates[0]}</strong> </p>\r\n                      </motion.div>\r\n                    )\r\n                  }\r\n                  \r\n                })\r\n              }\r\n\r\n               {/* if the Volcanoes button is pressed, the code below will execute*/}\r\n               {active===\"show_volcano\" &&\r\n                eventData.map(allData =>{\r\n                  if (allData.categories[0].id === \"volcanoes\") {\r\n                    if(allData.geometry[0].type === \"Polygon\"){\r\n                        return (\r\n                          <motion.div className=\"tracker-details-content\"\r\n                          initial={{opacity:0}}\r\n                          animate={{opacity:1}}\r\n                          exit={{opacity:0}}\r\n                          transition={{duration:1.5}}\r\n                          \r\n                          \r\n                          >\r\n                            \r\n                            <h2>Event: {allData.title}</h2>\r\n                            <p>Coordinates : X: <strong>{allData.geometry[0].coordinates[0][0][1]}</strong> Y: <strong>{allData.geometry[0].coordinates[0][0][0]}</strong> </p>\r\n                          </motion.div>\r\n                        );\r\n                    }\r\n                  }\r\n                  if(allData.categories[0].id === \"volcanoes\"){\r\n                    return(\r\n                      <motion.div className=\"tracker-details-content\"\r\n                      initial={{opacity:0}}\r\n                      animate={{opacity:1}}\r\n                      exit={{opacity:0}}\r\n                      transition={{duration:1.5}}\r\n                    \r\n                      >\r\n                        <h2>Event: {allData.title}</h2>\r\n                        <p>Coordinates : X: <strong>{allData.geometry[0].coordinates[1]}</strong> Y: <strong>{allData.geometry[0].coordinates[0]}</strong> </p>\r\n                      </motion.div>\r\n                    )\r\n                  }\r\n                  \r\n                })\r\n              }\r\n               {/* if the Ice Melt button is pressed, the code below will execute*/}\r\n               {active===\"show_icemelt\" &&\r\n                eventData.map(allData =>{\r\n                    \r\n                  if(allData.categories[0].id === \"seaLakeIce\"){\r\n                    return(\r\n                      <motion.div className=\"tracker-details-content\"\r\n                      initial={{opacity:0}}\r\n                      animate={{opacity:1}}\r\n                      exit={{opacity:0}}\r\n                      transition={{duration:1.5}}\r\n                    \r\n                      >\r\n                        <h2>Event: {allData.title}</h2>\r\n                        <p>Coordinates : X: <strong>{allData.geometry[0].coordinates[1]}</strong> Y: <strong>{allData.geometry[0].coordinates[0]}</strong> </p>\r\n                      </motion.div>\r\n                    )\r\n                  }\r\n                  \r\n                })\r\n              }\r\n            </motion.div>\r\n\r\n\r\n\r\n            {/* change map depending of button clicked */}\r\n\r\n            {/* show all Events markers in map if all button is clicked */}\r\n            {active===\"show_all\" &&\r\n                <motion.div className=\"tracker-map\" \r\n                initial={{x:1000}}\r\n                animate={{x:0}}\r\n                transition={{duration:2}}\r\n                \r\n                \r\n                >\r\n                    <Map eventData={eventData} /> \r\n                </motion.div>\r\n            }\r\n            \r\n            {/* show all Wildfire markers in map if wildfire button is clicked */}\r\n            {active===\"show_wildfire\" &&\r\n                <motion.div className=\"tracker-map\" \r\n                initial={{x:1000}}\r\n                animate={{x:0}}\r\n                transition={{duration:2}}\r\n                >\r\n                    <WildfireMap eventData={eventData} /> \r\n                </motion.div>\r\n            }\r\n\r\n            {/* show all Storms markers in map if storm button is clicked */}\r\n            {active===\"show_storm\" &&\r\n                <motion.div className=\"tracker-map\" \r\n                initial={{x:1000}}\r\n                animate={{x:0}}\r\n                transition={{duration:2}}\r\n                >\r\n                    <StormMap eventData={eventData} /> \r\n                </motion.div>\r\n            }\r\n\r\n            {/* show all Volcanoes markers in map if Volcanoes button is clicked */}\r\n            {active===\"show_volcano\" &&\r\n                <motion.div className=\"tracker-map\" \r\n                initial={{x:1000}}\r\n                animate={{x:0}}\r\n                transition={{duration:2}}\r\n                >\r\n                    <VolcanoesMap eventData={eventData} /> \r\n                </motion.div>\r\n            }\r\n\r\n             {/* show all Ice melt markers in map if ice melt button is clicked */}\r\n             {active===\"show_icemelt\" &&\r\n                <motion.div className=\"tracker-map\" \r\n                initial={{x:1000}}\r\n                animate={{x:0}}\r\n                transition={{duration:2}}\r\n                >\r\n                    <IceMeltMap eventData={eventData} /> \r\n                </motion.div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TrackerPage\r\n","export default __webpack_public_path__ + \"static/media/Glacier_img.9f4e07e5.png\";","export default __webpack_public_path__ + \"static/media/Storm_img.8ec0fdb5.png\";","export default __webpack_public_path__ + \"static/media/Volcanoes_img.0abaebf7.png\";","export default __webpack_public_path__ + \"static/media/Wildfire_img.e775ca52.png\";","export default __webpack_public_path__ + \"static/media/arrow.605f086d.png\";","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport GlacierImg from '../assets/Glacier_img.png';\r\nimport SevereStormImg from '../assets/Storm_img.png';\r\nimport VolcanoImg from '../assets/Volcanoes_img.png';\r\nimport WildfireImg from '../assets/Wildfire_img.png';\r\nimport Arrow from '../assets/arrow.png';\r\nimport {motion} from 'framer-motion';\r\n\r\nconst Home = () => {\r\n    return (\r\n        <motion.div className=\"home-page\"\r\n            initial={{ opacity: 0 }}\r\n            animate={{ opacity: 1 }}\r\n            exit={{ opacity: 0 }}\r\n       \r\n        >\r\n            <div className=\"page-desc\">\r\n                <p><strong>Tiyempu</strong> uses NASA’s EONET API which \r\n                contains JSON</p>\r\n                <p className=\"p-spacing\"> DATA about natural events that is currently \r\n                happening all over the world, and Google Map API that serves\r\n                as a geolocation in order to pinpoint the exact location of the\r\n                natural events \r\n                </p>\r\n            </div>\r\n            <div className=\"tracker-images\">\r\n                <motion.img src={WildfireImg} alt=\"Wildfires\" \r\n                    whileHover={{scale:2, zIndex:1, x:160, y:160}}\r\n                />\r\n                <motion.img src={VolcanoImg} alt=\"Volcanoes\" \r\n                    whileHover={{scale:2, zIndex:1, x:-160, y:160}}\r\n                />\r\n                <motion.img src={GlacierImg} alt=\"Glaciers\" \r\n                    whileHover={{scale:2, zIndex:1, x:160, y:-160}}\r\n                />\r\n                <motion.img src={SevereStormImg} alt=\"Severe Storms\" \r\n                    whileHover={{scale:2, zIndex:1, x:-160, y:-160}}\r\n                />\r\n            </div>\r\n            \r\n                <motion.button className=\"get-started-btn\"\r\n                    whileHover={{scale:1.3 , x:20}}\r\n                    \r\n                >\r\n                    <Link to=\"/nasa-api-eonet-project/tracker\">Get Started <img src={Arrow} alt=\"Arrow\" />\r\n                    </Link>\r\n                </motion.button>\r\n        </motion.div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","\r\nimport './App.scss';\r\nimport React from 'react';\r\nimport Header from './components/Header';\r\nimport TrackerPage from './components/TrackerPage';\r\nimport {BrowserRouter as Router,Switch,Route} from 'react-router-dom';\r\nimport Home from './components/Home';\r\nimport {AnimatePresence} from 'framer-motion';\r\nfunction App() {\r\n  \r\n\r\n  return (\r\n    <Router>\r\n      <div className=\"App\">\r\n        <Header/> \r\n\r\n        <AnimatePresence exitBeforeEnter>\r\n          <Switch>\r\n            <Route path=\"/nasa-api-eonet-project\" component={Home} exact/>\r\n            <Route path=\"/nasa-api-eonet-project/tracker\" component={TrackerPage}/>\r\n          </Switch>\r\n        </AnimatePresence>\r\n        \r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}